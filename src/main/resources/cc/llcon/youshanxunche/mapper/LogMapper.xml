<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.llcon.youshanxunche.mapper.LogMapper">
    <select id="getListOperateLogClass" resultType="string">
        select distinct(class_name)
        from operate_log
    </select>
    <select id="getOperateLogMethodListByClassName" resultType="string">
        select distinct(method_name)
        from operate_log
        where class_name = #{classname};
    </select>
    <select id="getListOperateLog" resultType="cc.llcon.youshanxunche.pojo.OperateLog">
        select id,
        bin_to_uuid(operate_user) as operate_user_id,
        operate_time,
        class_name,
        method_name,
        method_params,
        return_value,
        cost_time
        from operate_log
        <where>
            <if test="className != null">
                class_name = #{className}
            </if>
            <if test="methodName != null">
                and method_name = #{methodName}
            </if>
            <if test="begin != null and end != null">
                and operate_time between #{begin} and #{end}
            </if>
            <if test="operator != null">
                and operate_user = UUID_TO_BIN(#{operator})
            </if>
        </where>
        ORDER BY operate_time DESC ,id DESC
    </select>
    <select id="getListSelectLogClass" resultType="java.lang.String">
        select distinct(class_name)
        from select_log
    </select>
    <select id="getSelectLogMethodListByClassName" resultType="java.lang.String">
        select distinct(method_name)
        from select_log
        where class_name = #{classname};
    </select>
    <select id="getListSelectLog" resultType="cc.llcon.youshanxunche.pojo.OperateLog">
        select id,
        bin_to_uuid(operate_user) as operate_user_id,
        operate_time,
        class_name,
        method_name,
        method_params,
        cost_time
        from select_log
        <where>
            <if test="className != null">
                class_name = #{className}
            </if>
            <if test="methodName != null">
                and method_name = #{methodName}
            </if>
            <if test="begin!=null and end != null">
                and operate_time between #{begin} and #{end}
            </if>
            <if test="operator != null">
                and operate_user = UUID_TO_BIN(#{operator})
            </if>
        </where>
        ORDER BY operate_time DESC ,id DESC
    </select>
    <select id="getErrorLogClassificationList" resultType="java.lang.String">
        select distinct(classification)
        from error_log
    </select>
    <select id="getListErrorLog" resultType="cc.llcon.youshanxunche.pojo.ErrorLog">
        select id, time, classification, message, stack, stack_trace
        from error_log
        <where>
            <if test="classification != null and classification != 'null'">
                classification = #{classification}
            </if>
            <if test="classification == 'null'">
                and classification IS NULL
            </if>
            <if test="begin!=null and end != null">
                and time between #{begin} and #{end}
            </if>
        </where>
        ORDER BY time DESC ,id DESC
    </select>
    <select id="getLoginLog" resultType="cc.llcon.youshanxunche.pojo.LoginLogPojo">
        select l.id, operate_user as operateUserName,bin_to_uuid(u.id) as operate_user_id, l.operate_time, return_value,
        cost_time
        from login_log l left join (select * from tb_user) u on l.operate_user=u.username
        <where>
            <if test="userName != null">
                operate_user like CONCAT('%',#{userName},'%')
            </if>
            <if test="returnValue != null">
                and return_value = #{returnValue}
            </if>
            <if test="begin!=null and end != null">
                and operate_time between #{begin} and #{end}
            </if>
        </where>
        ORDER BY operate_time DESC ,id DESC
    </select>
</mapper>